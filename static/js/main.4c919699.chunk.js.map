{"version":3,"sources":["p5/loadable.js","p5/movement.js","p5/sketch.js","p5/p5.js","App.js","serviceWorker.js","index.js"],"names":["loadableP5","Loadable","millisOld","gTime","pos","x","y","z","millis","Date","now","writePos","Math","sin","PI","abs","angs","X","Y","Z","L","sqrt","dia","pi","atan2","acos","T","F","IK","Sketch","p5","obj","ang","alpha","beta","gamma","rot","preload","base","loadModel","shoulder","upArm","loArm","endp","setup","createCanvas","window","innerWidth","innerHeight","WEBGL","width","height","myCustomRedrawAccordingToNewPropsHandler","props","size","resizeCanvas","draw","background","smooth","noStroke","ambientLight","directionalLight","fill","ambientMaterial","mouseHandle","wpo","scale","push","showShapes","pop","trail","spheres","length","i","console","log","translate","sphere","c","color","model","rotateY","rotateX","mouseDragged","mouseX","pmouseX","mouseY","pmouseY","P5","React","useState","dimensions","setDimensions","useEffect","handleResize","addEventListener","_","removeEventListener","sketch","App","className","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4c919699.chunk.js","sourcesContent":["import Loadable from \"@loadable/component\";\r\n\r\nexport const loadableP5 = Loadable(() => import('react-p5-wrapper'));","let F = 50\r\nlet T = 70\r\nlet millisOld = 4,\r\n    gTime = 4, \r\n    gSpeed = 4;\r\n\r\nlet pos = {\r\n    x: 1,\r\n    y: 50,\r\n    z: 50\r\n}\r\n\r\nlet millis = function(){\r\n    return Date.now()\r\n}\r\n\r\nlet IK = () =>{    \r\n\r\n    let X = pos.x,\r\n        Y = pos.y,\r\n        Z = pos.z,\r\n        L = Math.sqrt(Y*Y+X*X),\r\n        dia = Math.sqrt(Z*Z+L*L);\r\n    const pi = Math.PI\r\n\r\n    let alpha = pi/2-(Math.atan2(L, Z)+Math.acos((T*T-F*F-dia*dia)/(-2*F*dia))),\r\n        beta = -pi+Math.acos((dia*dia-T*T-F*F)/(-2*F*T)),\r\n        gamma = Math.atan2(Y, X);\r\n    return [alpha, beta, gamma]\r\n}\r\n\r\nlet setTime = () =>{\r\n    gTime += (millis()/1000 - millisOld)*(gSpeed/4)\r\n    \r\n    if(gTime >= 4){\r\n        gTime = 0\r\n    }\r\n    millisOld = millis()/1000\r\n}\r\n\r\nlet writePos = () => {\r\n    //console.log(gTime)\r\n    pos.x = Math.sin(gTime*Math.PI/2)*20\r\n    pos.z = Math.sin(gTime*Math.PI)*20\r\n    pos.y = Math.abs(Math.sin(gTime*Math.PI))*40+25;\r\n    //console.log(gTime, pos.y)\r\n    \r\n\r\n    let angs = IK(pos.x, pos.y, pos.z)\r\n\r\n    setTime()\r\n    \r\n    //console.log(angs)\r\n    return {angs: angs, pos: pos}\r\n}\r\nexport default writePos","// Sketch.js \r\nimport writePos from './movement.js'\r\n\r\nexport default function Sketch(p5) {\r\n    let size;\r\n    let canvas;\r\n    \r\n    let obj;\r\n    let pos = {\r\n      x: 1,\r\n      y: 50,\r\n      z: 50\r\n    }\r\n    let ang = {\r\n      alpha: -1.0,\r\n      beta: -1.0,\r\n      gamma: 0.0\r\n    }\r\n    let rot = {\r\n      x: 0,\r\n      y: 0\r\n    }\r\n\r\n    p5.preload = () => {\r\n      obj = {\r\n        base: p5.loadModel(\"data/r5.obj\"),\r\n        shoulder: p5.loadModel(\"./data/r1.obj\"),\r\n        upArm: p5.loadModel(\"./data/r2.obj\"),\r\n        loArm: p5.loadModel(\"./data/r3.obj\"),\r\n        endp: p5.loadModel(\"./data/r4.obj\"),\r\n      };\r\n      //console.log(obj)\r\n    }\r\n    \r\n    p5.setup = () => {\r\n      canvas = p5.createCanvas(\r\n        window.innerWidth,\r\n        window.innerHeight,\r\n        p5.WEBGL);    \r\n\r\n        size = {\r\n          width: window.innerWidth,\r\n          height: window.innerHeight\r\n        }\r\n    };\r\n\r\n    p5.myCustomRedrawAccordingToNewPropsHandler = function (props) {\r\n      if (props.size){\r\n        size = props.size\r\n        p5.resizeCanvas(props.size.width, props.size.height)\r\n      }\r\n    };\r\n  \r\n    p5.draw = () => {\r\n      p5.background(32);\r\n      p5.smooth();\r\n      p5.noStroke()\r\n      p5.ambientLight(182,182,182);\r\n      p5.directionalLight(51, 102, 126, 0, -1, -1)\r\n      p5.fill(0xFFFF9F03)\r\n      p5.ambientMaterial(250); \r\n\r\n      mouseHandle();\r\n\r\n      let wpo = writePos()\r\n      ang = {\r\n        alpha: wpo.angs[0],\r\n        beta: wpo.angs[1],\r\n        gamma: wpo.angs[2]\r\n      }\r\n      pos = wpo.pos;\r\n      p5.scale(-4)\r\n      p5.push()\r\n      showShapes();\r\n      p5.pop()\r\n      \r\n      trail(pos, spheres);\r\n      \r\n\r\n      \r\n    };    \r\n\r\n    let spheres = [];\r\n    const trail = (pos, spheres) => {\r\n\r\n      if(spheres.length < 150){\r\n        spheres.push({x: pos.x, y: pos.y, z: pos.z})\r\n      }else{\r\n        for(let i = 0;i < spheres.length -1; i++){\r\n          spheres[i] = spheres[i+1]  \r\n        }\r\n        spheres[spheres.length - 1] = {x: pos.x, y: pos.y, z: pos.z};\r\n      }\r\n      for(let i = 0;i < spheres.length; i++){\r\n        p5.push()       \r\n        console.log(spheres)\r\n        p5.translate(-spheres[i].y, -spheres[i].z-11, -spheres[i].x)\r\n        p5.fill(255,255,255,(255/spheres.length)*i)\r\n        p5.sphere(i/45, 8);               \r\n        p5.pop()  \r\n      }      \r\n      //console.log(spheres)\r\n    }\r\n\r\n    const showShapes = () => {\r\n      //p5.translate(size.width/2, size.height/2)\r\n      let c = p5.color('#4f4f4fff')\r\n      p5.fill(c)\r\n\r\n      p5.translate(0,-40,0)\r\n      \r\n\r\n      p5.model(obj.base)  \r\n\r\n      c = p5.color('#ff7600ff')\r\n      p5.fill(c)\r\n      p5.translate(0, 4, 0)\r\n      p5.rotateY(ang.gamma)\r\n      p5.model(obj.shoulder)\r\n        \r\n      p5.translate(0, 25, 0)\r\n      p5.rotateY(Math.PI)\r\n      p5.rotateX(ang.alpha)\r\n      p5.model(obj.upArm)\r\n          \r\n      // //box(3,3,150)  \r\n        \r\n      p5.translate(0, 0, 50)\r\n      p5.rotateY(Math.PI)\r\n      p5.rotateX(ang.beta)\r\n      p5.model(obj.loArm)\r\n        \r\n      p5.translate(0, 0, -50)\r\n      p5.rotateY(Math.PI)\r\n      p5.model(obj.endp)\r\n      \r\n      //trail(pos);\r\n    \r\n  }\r\n    \r\n    \r\n    p5.mouseDragged = () => {\r\n      rot.y -= (p5.mouseX - p5.pmouseX) * 0.01\r\n      rot.x -= (p5.mouseY - p5.pmouseY) * 0.01\r\n    }\r\n    let mouseHandle = () =>{\r\n      p5.rotateX(rot.x)\r\n      p5.rotateY(-rot.y)\r\n    }\r\n\r\n  }","import React, { Component } from \"react\"\r\nimport {loadableP5 as P5Wrapper} from './loadable';\r\nimport Sketch from './sketch';\r\n\r\nfunction P5(){\r\n\r\n  const [dimensions, setDimensions] = React.useState({ \r\n    height: window.innerHeight,\r\n    width: window.innerWidth\r\n  })\r\n  React.useEffect(() => {\r\n    function handleResize() {\r\n      console.log(window.innerHeight, window.innerWidth)\r\n      setDimensions({\r\n        height: window.innerHeight,\r\n        width: window.innerWidth\r\n      })\r\n    }\r\n    window.addEventListener('resize', handleResize)\r\n    return _ => {\r\n      window.removeEventListener('resize', handleResize)\r\n    }\r\n  })\r\n\r\n  return(\r\n  <P5Wrapper sketch={Sketch} size={dimensions} />\r\n  )\r\n}\r\n\r\nexport default P5","import React from 'react';\r\n//import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport P5 from './p5/p5'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <P5></P5>\r\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\r\n        <p>\r\n          SO_R47.to\r\n        </p>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}